//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DS4WinWPF.Translations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DS4WinWPF.Translations.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Absolute Mouse.
        /// </summary>
        public static string AbsoluteMouse {
            get {
                return ResourceManager.GetString("AbsoluteMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Absolute Mouse Options.
        /// </summary>
        public static string AbsoluteMouseOptions {
            get {
                return ResourceManager.GetString("AbsoluteMouseOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accel.
        /// </summary>
        public static string Accel {
            get {
                return ResourceManager.GetString("Accel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accept.
        /// </summary>
        public static string Accept {
            get {
                return ResourceManager.GetString("Accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string Action {
            get {
                return ResourceManager.GetString("Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active.
        /// </summary>
        public static string Active {
            get {
                return ResourceManager.GetString("Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Directory.
        /// </summary>
        public static string AddDirectory {
            get {
                return ResourceManager.GetString("AddDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Programs.
        /// </summary>
        public static string AddPrograms {
            get {
                return ResourceManager.GetString("AddPrograms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Start Menu Programs.
        /// </summary>
        public static string AddStartMenuPrograms {
            get {
                return ResourceManager.GetString("AddStartMenuPrograms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Steam Games.
        /// </summary>
        public static string AddSteamGames {
            get {
                return ResourceManager.GetString("AddSteamGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analog.
        /// </summary>
        public static string Analog {
            get {
                return ResourceManager.GetString("Analog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-dead Zone.
        /// </summary>
        public static string AntiDeadZone {
            get {
                return ResourceManager.GetString("AntiDeadZone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An anti-deadzone acts as an offset for use with an axis to denote the minimum output value generated after an axis has left its assigned deadzone. This is mainly meant to help with mapping an axis to the assigned deadzone value used for an axis in a video game. For example, the typical assigned deadzone for XInput LS in a video game is around 8000 (25%). With no anti-deadzone assigned, an axis would have to move past the assigned deadzone in DS4Windows along with the game&apos;s assigned axis deadzone..
        /// </summary>
        public static string AntiDeadzoneTooltip {
            get {
                return ResourceManager.GetString("AntiDeadzoneTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Radius.
        /// </summary>
        public static string AntiRadius {
            get {
                return ResourceManager.GetString("AntiRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Snapback.
        /// </summary>
        public static string AntiSnapback {
            get {
                return ResourceManager.GetString("AntiSnapback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Snapback timing.
        /// </summary>
        public static string AntiSnapbackTiming {
            get {
                return ResourceManager.GetString("AntiSnapbackTiming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appdata.
        /// </summary>
        public static string Appdata {
            get {
                return ResourceManager.GetString("Appdata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        public static string Apply {
            get {
                return ResourceManager.GetString("Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Theme.
        /// </summary>
        public static string AppTheme {
            get {
                return ResourceManager.GetString("AppTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Profiles.
        /// </summary>
        public static string AutoProfiles {
            get {
                return ResourceManager.GetString("AutoProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Profile Switch via.
        /// </summary>
        public static string AutoProfiles_DisplaySwitchVia {
            get {
                return ResourceManager.GetString("AutoProfiles.DisplaySwitchVia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log + Notification.
        /// </summary>
        public static string AutoProfiles_LogAndNotification {
            get {
                return ResourceManager.GetString("AutoProfiles.LogAndNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process path. ^ABC = Match at the beginning of string (^) | ABC$ = Match at the end of string ($) | *ABC =Contains a string (*).
        /// </summary>
        public static string AutoProfPathTip {
            get {
                return ResourceManager.GetString("AutoProfPathTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window title. ^ABC = Match at the beginning of string (^) | ABC$ = Match at the end of string ($) | *ABC =Contains a string (*).
        /// </summary>
        public static string AutoProfTitleTip {
            get {
                return ResourceManager.GetString("AutoProfTitleTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axial.
        /// </summary>
        public static string Axial {
            get {
                return ResourceManager.GetString("Axial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axis Config.
        /// </summary>
        public static string AxisConfig {
            get {
                return ResourceManager.GetString("AxisConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Battery.
        /// </summary>
        public static string Battery {
            get {
                return ResourceManager.GetString("Battery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abs Mouse.
        /// </summary>
        public static string BindingWin_AbsMouse {
            get {
                return ResourceManager.GetString("BindingWin.AbsMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abs Mouse Down.
        /// </summary>
        public static string BindingWin_AbsMouseDown {
            get {
                return ResourceManager.GetString("BindingWin.AbsMouseDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abs Mouse Left.
        /// </summary>
        public static string BindingWin_AbsMouseLeft {
            get {
                return ResourceManager.GetString("BindingWin.AbsMouseLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abs Mouse Right.
        /// </summary>
        public static string BindingWin_AbsMouseRight {
            get {
                return ResourceManager.GetString("BindingWin.AbsMouseRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abs Mouse Up.
        /// </summary>
        public static string BindingWin_AbsMouseUp {
            get {
                return ResourceManager.GetString("BindingWin.AbsMouseUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Light.
        /// </summary>
        public static string BindingWin_ChangeLight {
            get {
                return ResourceManager.GetString("BindingWin.ChangeLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Mouse Sensitivity.
        /// </summary>
        public static string BindingWin_ChangeMouseSensitivity {
            get {
                return ResourceManager.GetString("BindingWin.ChangeMouseSensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KB &amp; Rel Mouse.
        /// </summary>
        public static string BindingWin_KeyAndRelMouse {
            get {
                return ResourceManager.GetString("BindingWin.KeyAndRelMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard &amp; Mouse.
        /// </summary>
        public static string BindingWin_KeyboardAndMouse {
            get {
                return ResourceManager.GetString("BindingWin.KeyboardAndMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macro On, Choose a key to disable, else close this window to save.
        /// </summary>
        public static string BindingWin_MacroOn {
            get {
                return ResourceManager.GetString("BindingWin.MacroOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record A Macro.
        /// </summary>
        public static string BindingWin_RecordAMacro {
            get {
                return ResourceManager.GetString("BindingWin.RecordAMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Shift Trigger.
        /// </summary>
        public static string BindingWin_SelectShiftTrigger {
            get {
                return ResourceManager.GetString("BindingWin.SelectShiftTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Black.
        /// </summary>
        public static string Black {
            get {
                return ResourceManager.GetString("Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        public static string Browse {
            get {
                return ResourceManager.GetString("Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Other Programs.
        /// </summary>
        public static string BrowseOtherPrograms {
            get {
                return ResourceManager.GetString("BrowseOtherPrograms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buttons.
        /// </summary>
        public static string Buttons {
            get {
                return ResourceManager.GetString("Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changelog.
        /// </summary>
        public static string Changelog {
            get {
                return ResourceManager.GetString("Changelog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes take effect on new device connection.
        /// </summary>
        public static string ChangeOnNewDeviceConn {
            get {
                return ResourceManager.GetString("ChangeOnNewDeviceConn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check every.
        /// </summary>
        public static string CheckEvery {
            get {
                return ResourceManager.GetString("CheckEvery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check For Update Now.
        /// </summary>
        public static string CheckUpdateNow {
            get {
                return ResourceManager.GetString("CheckUpdateNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for updates at DS4Windows startup.
        /// </summary>
        public static string CheckUpdateStartup {
            get {
                return ResourceManager.GetString("CheckUpdateStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Minimizes.
        /// </summary>
        public static string CloseMinimizes {
            get {
                return ResourceManager.GetString("CloseMinimizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        public static string Color {
            get {
                return ResourceManager.GetString("Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colored.
        /// </summary>
        public static string Colored {
            get {
                return ResourceManager.GetString("Colored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string Confirm {
            get {
                return ResourceManager.GetString("Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 1.
        /// </summary>
        public static string Controller1Text {
            get {
                return ResourceManager.GetString("Controller1Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 2.
        /// </summary>
        public static string Controller2Text {
            get {
                return ResourceManager.GetString("Controller2Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 3.
        /// </summary>
        public static string Controller3Text {
            get {
                return ResourceManager.GetString("Controller3Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 4.
        /// </summary>
        public static string Controller4Text {
            get {
                return ResourceManager.GetString("Controller4Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 5.
        /// </summary>
        public static string Controller5Text {
            get {
                return ResourceManager.GetString("Controller5Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 6.
        /// </summary>
        public static string Controller6Text {
            get {
                return ResourceManager.GetString("Controller6Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 7.
        /// </summary>
        public static string Controller7Text {
            get {
                return ResourceManager.GetString("Controller7Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller 8.
        /// </summary>
        public static string Controller8Text {
            get {
                return ResourceManager.GetString("Controller8Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Home LED.
        /// </summary>
        public static string ControllerRegOptWin_EnableHomeLED {
            get {
                return ResourceManager.GetString("ControllerRegOptWin.EnableHomeLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joined Gyro Provider.
        /// </summary>
        public static string ControllerRegOptWin_JoinedGyroProvider {
            get {
                return ResourceManager.GetString("ControllerRegOptWin.JoinedGyroProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link Mode.
        /// </summary>
        public static string ControllerRegOptWin_LinkMode {
            get {
                return ResourceManager.GetString("ControllerRegOptWin.LinkMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mute LED Mode.
        /// </summary>
        public static string ControllerRegOptWin_MuteLEDMode {
            get {
                return ResourceManager.GetString("ControllerRegOptWin.MuteLEDMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player LED Mode.
        /// </summary>
        public static string ControllerRegOptWin_PlayerLEDMode {
            get {
                return ResourceManager.GetString("ControllerRegOptWin.PlayerLEDMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller Type Options.
        /// </summary>
        public static string ControllerRegOptWin_WinTitle {
            get {
                return ResourceManager.GetString("ControllerRegOptWin.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controllers.
        /// </summary>
        public static string Controllers {
            get {
                return ResourceManager.GetString("Controllers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS3 Controller Support.
        /// </summary>
        public static string ControllerSupportDS3 {
            get {
                return ResourceManager.GetString("ControllerSupportDS3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS4 Controller Support.
        /// </summary>
        public static string ControllerSupportDS4 {
            get {
                return ResourceManager.GetString("ControllerSupportDS4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DualSense Controller Support.
        /// </summary>
        public static string ControllerSupportDualSense {
            get {
                return ResourceManager.GetString("ControllerSupportDualSense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JoyCon Controller Support.
        /// </summary>
        public static string ControllerSupportJoyCon {
            get {
                return ResourceManager.GetString("ControllerSupportJoyCon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Pro Controller Support.
        /// </summary>
        public static string ControllerSupportSwitchPro {
            get {
                return ResourceManager.GetString("ControllerSupportSwitchPro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control Panel.
        /// </summary>
        public static string ControlPanel {
            get {
                return ResourceManager.GetString("ControlPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls.
        /// </summary>
        public static string Controls {
            get {
                return ResourceManager.GetString("Controls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copycat.
        /// </summary>
        public static string Copycat {
            get {
                return ResourceManager.GetString("Copycat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change some flags used for a non-Sony DS4 controller. It might fix rumble and lightbar support for some third party DS4 clones.
        /// </summary>
        public static string CopycatTip {
            get {
                return ResourceManager.GetString("CopycatTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data integrity checks failed for wireless device. Closing device..
        /// </summary>
        public static string CRC32Fail {
            get {
                return ResourceManager.GetString("CRC32Fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cubic.
        /// </summary>
        public static string Cubic {
            get {
                return ResourceManager.GetString("Cubic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current.
        /// </summary>
        public static string Current {
            get {
                return ResourceManager.GetString("Current", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string Custom {
            get {
                return ResourceManager.GetString("Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Exe Name.
        /// </summary>
        public static string CustomExeName {
            get {
                return ResourceManager.GetString("CustomExeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some games implement a block that causes DS4 input to be ignored if a game detects either DS4Windows.exe or InputMapper.exe running at the time. A workaround to the block is to rename DS4Windows.exe so the check in the game fails. Specifying a custom exe name here allows DS4Updater to automatically update a custom copy of DS4Windows to the desired file name. Make sure to omit the extension.
        ///
        ///Example: whyme_DS4Windows.
        /// </summary>
        public static string CustomExeNameInfo {
            get {
                return ResourceManager.GetString("CustomExeNameInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        public static string Dark {
            get {
                return ResourceManager.GetString("Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days.
        /// </summary>
        public static string Days {
            get {
                return ResourceManager.GetString("Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dead Zone.
        /// </summary>
        public static string DeadZone {
            get {
                return ResourceManager.GetString("DeadZone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DeadZone X.
        /// </summary>
        public static string DeadZone_X {
            get {
                return ResourceManager.GetString("DeadZone X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DeadZone Y.
        /// </summary>
        public static string DeadZone_Y {
            get {
                return ResourceManager.GetString("DeadZone Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dead Zone Type.
        /// </summary>
        public static string DeadZoneType {
            get {
                return ResourceManager.GetString("DeadZoneType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Default {
            get {
                return ResourceManager.GetString("Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delta Acceleration.
        /// </summary>
        public static string DeltaAcceleration {
            get {
                return ResourceManager.GetString("DeltaAcceleration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Controllers.
        /// </summary>
        public static string DetectedControllers {
            get {
                return ResourceManager.GetString("DetectedControllers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Options.
        /// </summary>
        public static string DeviceOptions {
            get {
                return ResourceManager.GetString("DeviceOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device type.
        /// </summary>
        public static string DeviceType {
            get {
                return ResourceManager.GetString("DeviceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directional Swipe.
        /// </summary>
        public static string DirectionalSwipe {
            get {
                return ResourceManager.GetString("DirectionalSwipe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable virtual controller.
        /// </summary>
        public static string DisableVirtualController {
            get {
                return ResourceManager.GetString("DisableVirtualController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not spawn/associate virtual controllers for connected controllers using this profile (Applies on profile save).
        /// </summary>
        public static string DisableVirtualControllerTip {
            get {
                return ResourceManager.GetString("DisableVirtualControllerTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect from BT when Stopping.
        /// </summary>
        public static string DisconnectFromBtWhenStopping {
            get {
                return ResourceManager.GetString("DisconnectFromBtWhenStopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller/Driver Setup.
        /// </summary>
        public static string DriverSetup {
            get {
                return ResourceManager.GetString("DriverSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS4 BT Poll Rate.
        /// </summary>
        public static string DS4BTPollRate {
            get {
                return ResourceManager.GetString("DS4BTPollRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature currently disabled in app due to driver issues. Hopefully issues get fixed in a future update..
        /// </summary>
        public static string DS4LightbarPassthruDisabled {
            get {
                return ResourceManager.GetString("DS4LightbarPassthruDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default (Analog + Buttons).
        /// </summary>
        public static string DS4OutputTriggersDefault {
            get {
                return ResourceManager.GetString("DS4OutputTriggersDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force usage of both % strength levels (General and DualSense specifc).
        /// </summary>
        public static string DualSRumbleForceGenericRescale {
            get {
                return ResourceManager.GetString("DualSRumbleForceGenericRescale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommended to be left DISABLED.
        ///
        ///- Disabled: rumble will be rescaled natively by the controller accordingly to the defined power level (better quality)
        ///
        ///- Enabled: both DS4Windows generic rumble rescale and DualSense&apos;s native control will be active.
        /// </summary>
        public static string DualSRumbleForceGenericRescale_Tip {
            get {
                return ResourceManager.GetString("DualSRumbleForceGenericRescale_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accurate.
        /// </summary>
        public static string DualSRumbleModeAccurate {
            get {
                return ResourceManager.GetString("DualSRumbleModeAccurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        public static string DualSRumbleModeDisabled {
            get {
                return ResourceManager.GetString("DualSRumbleModeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy.
        /// </summary>
        public static string DualSRumbleModeLegacy {
            get {
                return ResourceManager.GetString("DualSRumbleModeLegacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rumble mode and strength level:.
        /// </summary>
        public static string DualSRumbleModeNPowerLevelTxt {
            get {
                return ResourceManager.GetString("DualSRumbleModeNPowerLevelTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passthru.
        /// </summary>
        public static string DualSRumbleModePassthru {
            get {
                return ResourceManager.GetString("DualSRumbleModePassthru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accurate Mode (recommended):
        ///- Better replicates the DualShock 4/Xbox 360 controller rumble feeling
        ///- More accurately executes game&apos;s intended rumble effects
        ///- Rumble has more depth. Within the same power level there is a greater difference between min and max in-game rumble activation,
        ///varying from real low up to the max strength of the defined power level
        ///
        ///Legacy Mode:
        ///- Overral stronger, but lacks depth
        ///- Has a &quot;sharper&quot; feeling
        ///- The min and max activation in-game will be, respectively, only sl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DualSRumbleModes_Tip {
            get {
                return ResourceManager.GetString("DualSRumbleModes_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DualSense&apos;s native rumble Power Level rescaler.
        ///
        ///- When in Accurate Mode, rumble&apos;s [ min // max ] will be [ 1% /// Chosen Power Level ]
        ///    - Example (62%): [ min = 1% /// max = 62% ]
        ///
        ///- When in Legacy Mode, rumble&apos;s [min /// max ] will be roughly [ Power Level - 12% /// Power Level + 12% ]
        ///    - Example (62%): [ min = 50% /// max = 74% ].
        /// </summary>
        public static string DualSRumblePowerLevel_Tip {
            get {
                return ResourceManager.GetString("DualSRumblePowerLevel_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DualSense specific rumble settings.
        /// </summary>
        public static string DualSRumbleSpecificSettings {
            get {
                return ResourceManager.GetString("DualSRumbleSpecificSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate.
        /// </summary>
        public static string Duplicate {
            get {
                return ResourceManager.GetString("Duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamic.
        /// </summary>
        public static string Dynamic {
            get {
                return ResourceManager.GetString("Dynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easeout Cubic.
        /// </summary>
        public static string EaseoutCubic {
            get {
                return ResourceManager.GetString("EaseoutCubic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easeout Quad.
        /// </summary>
        public static string EaseoutQuad {
            get {
                return ResourceManager.GetString("EaseoutQuad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easing Duration.
        /// </summary>
        public static string EasingDuration {
            get {
                return ResourceManager.GetString("EasingDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Action.
        /// </summary>
        public static string EditAction {
            get {
                return ResourceManager.GetString("EditAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulated Controller.
        /// </summary>
        public static string EmulatedController {
            get {
                return ResourceManager.GetString("EmulatedController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interpret Monitoring Messages.
        /// </summary>
        public static string EnableInterpretingOscMonitoring {
            get {
                return ResourceManager.GetString("EnableInterpretingOscMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Monitoring Service.
        /// </summary>
        public static string EnableOscSender {
            get {
                return ResourceManager.GetString("EnableOscSender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Control Server.
        /// </summary>
        public static string EnableOscServer {
            get {
                return ResourceManager.GetString("EnableOscServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Output data to DS4.
        /// </summary>
        public static string EnableOutputDataToDS4 {
            get {
                return ResourceManager.GetString("EnableOutputDataToDS4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output lightbar and rumble data periodically to DS4 gamepad. Untick if the gamepad doesn&apos;t support data receiving.
        ///Changes to this option takes effect at the gamepad connection time..
        /// </summary>
        public static string EnableOutputDataToDS4Tip {
            get {
                return ResourceManager.GetString("EnableOutputDataToDS4Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Touchpad Toggle.
        /// </summary>
        public static string EnableTouchpadToggle {
            get {
                return ResourceManager.GetString("EnableTouchpadToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable verbose log.
        /// </summary>
        public static string EnableVerboseLog {
            get {
                return ResourceManager.GetString("EnableVerboseLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show additional log messages when a gamepad is connected.
        /// </summary>
        public static string EnableVerboseLogTip {
            get {
                return ResourceManager.GetString("EnableVerboseLogTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enhanced Precision.
        /// </summary>
        public static string EnhancedPrecision {
            get {
                return ResourceManager.GetString("EnhancedPrecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusive Access.
        /// </summary>
        public static string ExclusiveAccess {
            get {
                return ResourceManager.GetString("ExclusiveAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra.
        /// </summary>
        public static string Extra {
            get {
                return ResourceManager.GetString("Extra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to other mappers enabling support for multiple device types by default (Steam Input), DS4Windows only enables support for reading from DS4 controllers by default. You can specify mapper support for other supported device types here. Be careful when using DS4Windows with other possible mappers running at the same time..
        /// </summary>
        public static string FirstLaunch_DeviceIntroText {
            get {
                return ResourceManager.GetString("FirstLaunch.DeviceIntroText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Support.
        /// </summary>
        public static string FirstLaunch_DeviceSupport {
            get {
                return ResourceManager.GetString("FirstLaunch.DeviceSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS3 Device Support.
        /// </summary>
        public static string FirstLaunch_DS3EnableCkbLabel {
            get {
                return ResourceManager.GetString("FirstLaunch.DS3EnableCkbLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support for DualShock 3 (PS3) controllers. Requires the use of the DsHidMini driver from the ViGEm project (nefarius)..
        /// </summary>
        public static string FirstLaunch_DS3EnableText {
            get {
                return ResourceManager.GetString("FirstLaunch.DS3EnableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS4 Device Support.
        /// </summary>
        public static string FirstLaunch_DS4EnableCkbLabel {
            get {
                return ResourceManager.GetString("FirstLaunch.DS4EnableCkbLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support for known DualShock 4 controllers.
        /// </summary>
        public static string FirstLaunch_DS4EnableText {
            get {
                return ResourceManager.GetString("FirstLaunch.DS4EnableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DualSense Device Support.
        /// </summary>
        public static string FirstLaunch_DSEnableCkbLabel {
            get {
                return ResourceManager.GetString("FirstLaunch.DSEnableCkbLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support for DualSense (PS5) controllers. Base model and DS Edge.
        /// </summary>
        public static string FirstLaunch_DSEnableText {
            get {
                return ResourceManager.GetString("FirstLaunch.DSEnableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled Devices Mapper Support.
        /// </summary>
        public static string FirstLaunch_Header {
            get {
                return ResourceManager.GetString("FirstLaunch.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JoyCon Device Support.
        /// </summary>
        public static string FirstLaunch_JoyConEnableCkbLabel {
            get {
                return ResourceManager.GetString("FirstLaunch.JoyConEnableCkbLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support for JoyCon (Nintendo Switch) controllers.
        /// </summary>
        public static string FirstLaunch_JoyConEnableText {
            get {
                return ResourceManager.GetString("FirstLaunch.JoyConEnableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Pro Device Support.
        /// </summary>
        public static string FirstLaunch_SwitchProEnableCkbLabel {
            get {
                return ResourceManager.GetString("FirstLaunch.SwitchProEnableCkbLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support for Switch Pro (Nintendo Switch) controllers.
        /// </summary>
        public static string FirstLaunch_SwitchProEnableText {
            get {
                return ResourceManager.GetString("FirstLaunch.SwitchProEnableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First Launch.
        /// </summary>
        public static string FirstLaunch_WinTitle {
            get {
                return ResourceManager.GetString("FirstLaunch.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flash Lightbar at High Latency.
        /// </summary>
        public static string FlashLightbarAtHighLatency {
            get {
                return ResourceManager.GetString("FlashLightbarAtHighLatency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flash Rate.
        /// </summary>
        public static string FlashRate {
            get {
                return ResourceManager.GetString("FlashRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flick Stick.
        /// </summary>
        public static string FlickStick {
            get {
                return ResourceManager.GetString("FlickStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flick Threshold.
        /// </summary>
        public static string FlickThreshold {
            get {
                return ResourceManager.GetString("FlickThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flick Time.
        /// </summary>
        public static string FlickTime {
            get {
                return ResourceManager.GetString("FlickTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full.
        /// </summary>
        public static string Full {
            get {
                return ResourceManager.GetString("Full", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Btn Pull.
        /// </summary>
        public static string FullBtnPull {
            get {
                return ResourceManager.GetString("FullBtnPull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET 5 Runtime was not detected on your system. Please download and install .NET 5 Runtime to ensure compatibility with future DS4Windows builds. You will be redirected to the .NET 5 Runtime download page upon closing this window..
        /// </summary>
        public static string FutureNetNotInstalled {
            get {
                return ResourceManager.GetString("FutureNetNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fuzz.
        /// </summary>
        public static string Fuzz {
            get {
                return ResourceManager.GetString("Fuzz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps the controller output to a standard XInput gamepad or DS4 pad. Gyro is mapped to a Mouse-like Joystick..
        /// </summary>
        public static string GamepadGyroCameraDescription {
            get {
                return ResourceManager.GetString("GamepadGyroCameraDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamepad with Mouse-like Joystick.
        /// </summary>
        public static string GamepadGyroCameraName {
            get {
                return ResourceManager.GetString("GamepadGyroCameraName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps the controller output to a standard gamepad.
        /// </summary>
        public static string GamepadPresetDescription {
            get {
                return ResourceManager.GetString("GamepadPresetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamepad.
        /// </summary>
        public static string GamepadPresetName {
            get {
                return ResourceManager.GetString("GamepadPresetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamepad Test.
        /// </summary>
        public static string GamepadTest {
            get {
                return ResourceManager.GetString("GamepadTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gyro.
        /// </summary>
        public static string Gyro {
            get {
                return ResourceManager.GetString("Gyro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls (Accel).
        /// </summary>
        public static string GyroControlsAccel {
            get {
                return ResourceManager.GetString("GyroControlsAccel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add additional throttling at low end of curve to account for device shaking.
        /// </summary>
        public static string GyroTriggerJitterCompensationTooltip {
            get {
                return ResourceManager.GetString("GyroTriggerJitterCompensationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Heavy.
        /// </summary>
        public static string Heavy {
            get {
                return ResourceManager.GetString("Heavy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height.
        /// </summary>
        public static string Height {
            get {
                return ResourceManager.GetString("Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide DS4 Controller.
        /// </summary>
        public static string HideDS4Controller {
            get {
                return ResourceManager.GetString("HideDS4Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide Unchecked.
        /// </summary>
        public static string HideUnchecked {
            get {
                return ResourceManager.GetString("HideUnchecked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HidGuardian Access.
        /// </summary>
        public static string HidGuardianAccess {
            get {
                return ResourceManager.GetString("HidGuardianAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HidHide.
        /// </summary>
        public static string HidHide {
            get {
                return ResourceManager.GetString("HidHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HidHide Access.
        /// </summary>
        public static string HidHideAccess {
            get {
                return ResourceManager.GetString("HidHideAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HidHide Configuration Client.
        /// </summary>
        public static string HidHideConfigClient {
            get {
                return ResourceManager.GetString("HidHideConfigClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HidNinja.
        /// </summary>
        public static string HidNinja {
            get {
                return ResourceManager.GetString("HidNinja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hip Fire Delay.
        /// </summary>
        public static string HipFireDelay {
            get {
                return ResourceManager.GetString("HipFireDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkeys/About.
        /// </summary>
        public static string HotkeysAbout {
            get {
                return ResourceManager.GetString("HotkeysAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hours.
        /// </summary>
        public static string Hours {
            get {
                return ResourceManager.GetString("Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon Choice.
        /// </summary>
        public static string IconChoice {
            get {
                return ResourceManager.GetString("IconChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        public static string ID {
            get {
                return ResourceManager.GetString("ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Idle Disconnect.
        /// </summary>
        public static string IdleDisconnect {
            get {
                return ResourceManager.GetString("IdleDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intro.
        /// </summary>
        public static string Intro {
            get {
                return ResourceManager.GetString("Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps the controller output to virtual KB+M controls. Useful for playing FPS games with no gamepad support. Gyro is mapped to a virtual Mouse..
        /// </summary>
        public static string KBMGyroMouseDescription {
            get {
                return ResourceManager.GetString("KBMGyroMouseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KB+M Controls with Gyro Mouse.
        /// </summary>
        public static string KBMGyroMouseName {
            get {
                return ResourceManager.GetString("KBMGyroMouseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps the controller output to virtual KB+M controls. Useful for playing FPS games with no gamepad support..
        /// </summary>
        public static string KBMPresetDescription {
            get {
                return ResourceManager.GetString("KBMPresetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KB+M Controls.
        /// </summary>
        public static string KBMPresetName {
            get {
                return ResourceManager.GetString("KBMPresetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use language pack.
        /// </summary>
        public static string LangPackControl_UseLangPack {
            get {
                return ResourceManager.GetString("LangPackControl.UseLangPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch program with profile.
        /// </summary>
        public static string LaunchProgramWithProfile {
            get {
                return ResourceManager.GetString("LaunchProgramWithProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left Stick.
        /// </summary>
        public static string LeftStick {
            get {
                return ResourceManager.GetString("LeftStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string Light {
            get {
                return ResourceManager.GetString("Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lightbar.
        /// </summary>
        public static string Lightbar {
            get {
                return ResourceManager.GetString("Lightbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear.
        /// </summary>
        public static string Linear {
            get {
                return ResourceManager.GetString("Linear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link Profile/ID.
        /// </summary>
        public static string LinkProfileId {
            get {
                return ResourceManager.GetString("LinkProfileId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log.
        /// </summary>
        public static string Log {
            get {
                return ResourceManager.GetString("Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abs Display Monitor.
        /// </summary>
        public static string MainWin_AbsDisplayMonitor {
            get {
                return ResourceManager.GetString("MainWin.AbsDisplayMonitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Server.
        /// </summary>
        public static string MainWin_EnableServer {
            get {
                return ResourceManager.GetString("MainWin.EnableServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1€ Beta.
        /// </summary>
        public static string MainWin_OneEuroBeta {
            get {
                return ResourceManager.GetString("MainWin.OneEuroBeta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1€ MinCutoff.
        /// </summary>
        public static string MainWin_OneEuroMinCutoff {
            get {
                return ResourceManager.GetString("MainWin.OneEuroMinCutoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Output.
        /// </summary>
        public static string MaxOutput {
            get {
                return ResourceManager.GetString("MaxOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Travel.
        /// </summary>
        public static string MaxTravel {
            get {
                return ResourceManager.GetString("MaxTravel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Zone.
        /// </summary>
        public static string MaxZone {
            get {
                return ResourceManager.GetString("MaxZone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Min Angle Threshold.
        /// </summary>
        public static string MinAngleThreshold {
            get {
                return ResourceManager.GetString("MinAngleThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Min Factor.
        /// </summary>
        public static string MinFactor {
            get {
                return ResourceManager.GetString("MinFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize to Taskbar.
        /// </summary>
        public static string MinimizeToTaskbar {
            get {
                return ResourceManager.GetString("MinimizeToTaskbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize to Taskbar instead of System Tray.
        /// </summary>
        public static string MinimizeToTaskbarTip {
            get {
                return ResourceManager.GetString("MinimizeToTaskbarTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Min Travel.
        /// </summary>
        public static string MinTravel {
            get {
                return ResourceManager.GetString("MinTravel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps the buttons and axes to a standard gamepad. Maps the Gyro to a virtual mouse.
        /// </summary>
        public static string MixedGyroMousePresetDescription {
            get {
                return ResourceManager.GetString("MixedGyroMousePresetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamepad with Gyro Mouse.
        /// </summary>
        public static string MixedGyroMousePresetName {
            get {
                return ResourceManager.GetString("MixedGyroMousePresetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps the controller output to mixed XInput gamepad + RS mouse..
        /// </summary>
        public static string MixedPresetDescription {
            get {
                return ResourceManager.GetString("MixedPresetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamepad with High Precision Camera.
        /// </summary>
        public static string MixedPresetName {
            get {
                return ResourceManager.GetString("MixedPresetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode.
        /// </summary>
        public static string Mode {
            get {
                return ResourceManager.GetString("Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse.
        /// </summary>
        public static string Mouse {
            get {
                return ResourceManager.GetString("Mouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse Acceleration.
        /// </summary>
        public static string MouseAcceleration {
            get {
                return ResourceManager.GetString("MouseAcceleration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse Joystick.
        /// </summary>
        public static string MouseJoystick {
            get {
                return ResourceManager.GetString("MouseJoystick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse Offset.
        /// </summary>
        public static string MouseOffset {
            get {
                return ResourceManager.GetString("MouseOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse Sensitivity.
        /// </summary>
        public static string MouseSensitivity {
            get {
                return ResourceManager.GetString("MouseSensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse Vertical Scale.
        /// </summary>
        public static string MouseVerticalScale {
            get {
                return ResourceManager.GetString("MouseVerticalScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Down.
        /// </summary>
        public static string MoveDown {
            get {
                return ResourceManager.GetString("MoveDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Up.
        /// </summary>
        public static string MoveUp {
            get {
                return ResourceManager.GetString("MoveUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiplier.
        /// </summary>
        public static string Multiplier {
            get {
                return ResourceManager.GetString("Multiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET 8 Not Found.
        /// </summary>
        public static string Net8NoticeWin_WinTitle {
            get {
                return ResourceManager.GetString("Net8NoticeWin.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS4Windows version 3.3 will require the installation of the .NET 8 Desktop Runtime on your system  
        ///[https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/runtime-desktop-8.0.0-windows-{0}-installer](https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/runtime-desktop-8.0.0-windows-{0}-installer)  
        ///
        ///Please click OK to confirm that you have read the message. Press Cancel to be reminded again on the next application launch..
        /// </summary>
        public static string Net8NotInstalledWinNotice {
            get {
                return ResourceManager.GetString("Net8NotInstalledWinNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Action.
        /// </summary>
        public static string NewAction {
            get {
                return ResourceManager.GetString("NewAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Profile.
        /// </summary>
        public static string NewProfile {
            get {
                return ResourceManager.GetString("NewProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Controllers Connected (Max {0}).
        /// </summary>
        public static string NoControllersConnected {
            get {
                return ResourceManager.GetString("NoControllersConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal.
        /// </summary>
        public static string Normal {
            get {
                return ResourceManager.GetString("Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification.
        /// </summary>
        public static string Notification {
            get {
                return ResourceManager.GetString("Notification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External OSC Control &amp; Monitoring.
        /// </summary>
        public static string OscServerHeading {
            get {
                return ResourceManager.GetString("OscServerHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other.
        /// </summary>
        public static string Other {
            get {
                return ResourceManager.GetString("Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose the type of output virtual controller (Applies on profile save).
        /// </summary>
        public static string OutContNotice {
            get {
                return ResourceManager.GetString("OutContNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outer Bind.
        /// </summary>
        public static string OuterBind {
            get {
                return ResourceManager.GetString("OuterBind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outer Btn.
        /// </summary>
        public static string OuterBtn {
            get {
                return ResourceManager.GetString("OuterBtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outer Btn Dead.
        /// </summary>
        public static string OuterBtnDead {
            get {
                return ResourceManager.GetString("OuterBtnDead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Curve.
        /// </summary>
        public static string OutputCurve {
            get {
                return ResourceManager.GetString("OutputCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Mode.
        /// </summary>
        public static string OutputMode {
            get {
                return ResourceManager.GetString("OutputMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input #.
        /// </summary>
        public static string OutputSlotMan_InputNum {
            get {
                return ResourceManager.GetString("OutputSlotMan.InputNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XInput #.
        /// </summary>
        public static string OutputSlotMan_XInputNum {
            get {
                return ResourceManager.GetString("OutputSlotMan.XInputNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Slots.
        /// </summary>
        public static string OutputSlots {
            get {
                return ResourceManager.GetString("OutputSlots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passthru.
        /// </summary>
        public static string Passthru {
            get {
                return ResourceManager.GetString("Passthru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string Path {
            get {
                return ResourceManager.GetString("Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permanent.
        /// </summary>
        public static string Permanent {
            get {
                return ResourceManager.GetString("Permanent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pitch.
        /// </summary>
        public static string Pitch {
            get {
                return ResourceManager.GetString("Pitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plug.
        /// </summary>
        public static string Plug {
            get {
                return ResourceManager.GetString("Plug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        public static string Port {
            get {
                return ResourceManager.GetString("Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to use a preset option? Choosing No will cause the Profile Editor to use an empty Gamepad profile..
        /// </summary>
        public static string PresetIntroText {
            get {
                return ResourceManager.GetString("PresetIntroText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Controller.
        /// </summary>
        public static string PresetOptWin_OutputController {
            get {
                return ResourceManager.GetString("PresetOptWin.OutputController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset Menu.
        /// </summary>
        public static string PresetOptWin_PresetMenu {
            get {
                return ResourceManager.GetString("PresetOptWin.PresetMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presets.
        /// </summary>
        public static string Presets {
            get {
                return ResourceManager.GetString("Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile.
        /// </summary>
        public static string Profile {
            get {
                return ResourceManager.GetString("Profile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS4 Trigger Output Mode.
        /// </summary>
        public static string ProfileEditor_VirtualDS4TrigOutput {
            get {
                return ResourceManager.GetString("ProfileEditor.VirtualDS4TrigOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Folder.
        /// </summary>
        public static string ProfileFolder {
            get {
                return ResourceManager.GetString("ProfileFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiles.
        /// </summary>
        public static string Profiles {
            get {
                return ResourceManager.GetString("Profiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program.
        /// </summary>
        public static string Program {
            get {
                return ResourceManager.GetString("Program", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program Folder.
        /// </summary>
        public static string ProgramFolder {
            get {
                return ResourceManager.GetString("ProgramFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quadratic.
        /// </summary>
        public static string Quadratic {
            get {
                return ResourceManager.GetString("Quadratic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Charge.
        /// </summary>
        public static string QuickCharge {
            get {
                return ResourceManager.GetString("QuickCharge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radial.
        /// </summary>
        public static string Radial {
            get {
                return ResourceManager.GetString("Radial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Battery: 0%.
        /// </summary>
        public static string ReadingsControl_BatteryZero {
            get {
                return ResourceManager.GetString("ReadingsControl.BatteryZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Delay: N/A.
        /// </summary>
        public static string ReadingsControl_InputDelayNA {
            get {
                return ResourceManager.GetString("ReadingsControl.InputDelayNA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SixAxis: X Axis is flipped so it is easier to read.
        /// </summary>
        public static string ReadingsControl_SixAxisXText {
            get {
                return ResourceManager.GetString("ReadingsControl.SixAxisXText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Real World Calibration.
        /// </summary>
        public static string RealWorldCalibration {
            get {
                return ResourceManager.GetString("RealWorldCalibration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Rumble.
        /// </summary>
        public static string RecordBox_AddRumble {
            get {
                return ResourceManager.GetString("RecordBox.AddRumble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Lightbar Color.
        /// </summary>
        public static string RecordBox_ChangeLightbarColor {
            get {
                return ResourceManager.GetString("RecordBox.ChangeLightbarColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double click on a wait to edit the time.
        /// </summary>
        public static string RecordBox_DoubleClickWaitEdit {
            get {
                return ResourceManager.GetString("RecordBox.DoubleClickWaitEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 5th Mouse Button.
        /// </summary>
        public static string RecordBox_FifthMB {
            get {
                return ResourceManager.GetString("RecordBox.FifthMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4th Mouse Button.
        /// </summary>
        public static string RecordBox_FourthMB {
            get {
                return ResourceManager.GetString("RecordBox.FourthMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert Wait.
        /// </summary>
        public static string RecordBox_InsertWait {
            get {
                return ResourceManager.GetString("RecordBox.InsertWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load Preset.
        /// </summary>
        public static string RecordBox_LoadPreset {
            get {
                return ResourceManager.GetString("RecordBox.LoadPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macro Order.
        /// </summary>
        public static string RecordBox_MacroOrder {
            get {
                return ResourceManager.GetString("RecordBox.MacroOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play Once.
        /// </summary>
        public static string RecordBox_PlayOnce {
            get {
                return ResourceManager.GetString("RecordBox.PlayOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record Delays.
        /// </summary>
        public static string RecordBox_RecordDelays {
            get {
                return ResourceManager.GetString("RecordBox.RecordDelays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repeat While Held.
        /// </summary>
        public static string RecordBox_RepeatWhileHeld {
            get {
                return ResourceManager.GetString("RecordBox.RepeatWhileHeld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Preset.
        /// </summary>
        public static string RecordBox_SavePreset {
            get {
                return ResourceManager.GetString("RecordBox.SavePreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Keyboard/Mouse + Controller 1 to record.
        /// </summary>
        public static string RecordBox_UseActionToRecord {
            get {
                return ResourceManager.GetString("RecordBox.UseActionToRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Macro.
        /// </summary>
        public static string RecordBoxWin_WinTitle {
            get {
                return ResourceManager.GetString("RecordBoxWin.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record.
        /// </summary>
        public static string RecordText {
            get {
                return ResourceManager.GetString("RecordText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular.
        /// </summary>
        public static string Regular {
            get {
                return ResourceManager.GetString("Regular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Action.
        /// </summary>
        public static string RemoveAction {
            get {
                return ResourceManager.GetString("RemoveAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename.
        /// </summary>
        public static string RenameProfile {
            get {
                return ResourceManager.GetString("RenameProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type the new name to use for the selected profile XML file..
        /// </summary>
        public static string RenameProfileWin_TypeNewProfileName {
            get {
                return ResourceManager.GetString("RenameProfileWin.TypeNewProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename Profile.
        /// </summary>
        public static string RenameProfileWin_WinTitle {
            get {
                return ResourceManager.GetString("RenameProfileWin.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested.
        /// </summary>
        public static string Requested {
            get {
                return ResourceManager.GetString("Requested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revert to default profile on unknown.
        /// </summary>
        public static string RevertToDefaultProfileOnUnknown {
            get {
                return ResourceManager.GetString("RevertToDefaultProfileOnUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right Stick.
        /// </summary>
        public static string RightStick {
            get {
                return ResourceManager.GetString("RightStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roll.
        /// </summary>
        public static string Roll {
            get {
                return ResourceManager.GetString("Roll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotation.
        /// </summary>
        public static string Rotation {
            get {
                return ResourceManager.GetString("Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rumble.
        /// </summary>
        public static string Rumble {
            get {
                return ResourceManager.GetString("Rumble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sec.
        /// </summary>
        public static string RumbleMaxSecs {
            get {
                return ResourceManager.GetString("RumbleMaxSecs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto stop rumble in secs (0=auto stop disabled).
        /// </summary>
        public static string RumbleMaxSecsTip {
            get {
                return ResourceManager.GetString("RumbleMaxSecsTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run As.
        /// </summary>
        public static string RunAs {
            get {
                return ResourceManager.GetString("RunAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run At Startup.
        /// </summary>
        public static string RunAtStartup {
            get {
                return ResourceManager.GetString("RunAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fuzz specifies the minimum number of device units, in active zone, that the Accel has to be rotated before the output is registered as changed in the mapper. The value is expressed in raw Accel units..
        /// </summary>
        public static string SASteeringWheelFuzzTooltip {
            get {
                return ResourceManager.GetString("SASteeringWheelFuzzTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string SaveProfile {
            get {
                return ResourceManager.GetString("SaveProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For those who prefer a regular install. Settings saved at %appdata%\DS4Windows.
        /// </summary>
        public static string SaveWhere_AppDataDescText {
            get {
                return ResourceManager.GetString("SaveWhere.AppDataDescText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t Delete the other settings yet.
        /// </summary>
        public static string SaveWhere_DontDelete {
            get {
                return ResourceManager.GetString("SaveWhere.DontDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple save locations detected.
        /// </summary>
        public static string SaveWhere_MultipleSaves {
            get {
                return ResourceManager.GetString("SaveWhere.MultipleSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pick where you want profiles and settings to be saved.
        /// </summary>
        public static string SaveWhere_PickWhere {
            get {
                return ResourceManager.GetString("SaveWhere.PickWhere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For those who prefer a portable program.
        ///Note: this option does not work if in an admin folder w/o UAC.
        /// </summary>
        public static string SaveWhere_ProgramFolderDescText {
            get {
                return ResourceManager.GetString("SaveWhere.ProgramFolderDescText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Where.
        /// </summary>
        public static string SaveWhere_WinTitle {
            get {
                return ResourceManager.GetString("SaveWhere.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Code.
        /// </summary>
        public static string ScanCode {
            get {
                return ResourceManager.GetString("ScanCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Profile.
        /// </summary>
        public static string SelectedProfile {
            get {
                return ResourceManager.GetString("SelectedProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensitivity.
        /// </summary>
        public static string Sensitivity {
            get {
                return ResourceManager.GetString("Sensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared Access.
        /// </summary>
        public static string SharedAccess {
            get {
                return ResourceManager.GetString("SharedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift Modifier.
        /// </summary>
        public static string ShiftModifier {
            get {
                return ResourceManager.GetString("ShiftModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show auto-profile debug messages.
        /// </summary>
        public static string ShowAutoProfileDebugMessages {
            get {
                return ResourceManager.GetString("ShowAutoProfileDebugMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Notifications.
        /// </summary>
        public static string ShowNotifications {
            get {
                return ResourceManager.GetString("ShowNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Six Axis (Accel).
        /// </summary>
        public static string SixAxisAccel {
            get {
                return ResourceManager.GetString("SixAxisAccel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip Version.
        /// </summary>
        public static string SkipVersion {
            get {
                return ResourceManager.GetString("SkipVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Snap To Center.
        /// </summary>
        public static string SnapToCenter {
            get {
                return ResourceManager.GetString("SnapToCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Battery Life.
        /// </summary>
        public static string SpecialActionEdit_CheckBattery {
            get {
                return ResourceManager.GetString("SpecialActionEdit.CheckBattery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect from Bluetooth.
        /// </summary>
        public static string SpecialActionEdit_DisconnectBT {
            get {
                return ResourceManager.GetString("SpecialActionEdit.DisconnectBT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double Tap Trigger.
        /// </summary>
        public static string SpecialActionEdit_DoubleTapTrigger {
            get {
                return ResourceManager.GetString("SpecialActionEdit.DoubleTapTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hold for.
        /// </summary>
        public static string SpecialActionEdit_HoldFor {
            get {
                return ResourceManager.GetString("SpecialActionEdit.HoldFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hold Trigger.
        /// </summary>
        public static string SpecialActionEdit_HoldTrigger {
            get {
                return ResourceManager.GetString("SpecialActionEdit.HoldTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep key state.
        /// </summary>
        public static string SpecialActionEdit_KeepKeyState {
            get {
                return ResourceManager.GetString("SpecialActionEdit.KeepKeyState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch a program.
        /// </summary>
        public static string SpecialActionEdit_LaunchProgram {
            get {
                return ResourceManager.GetString("SpecialActionEdit.LaunchProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load a profile.
        /// </summary>
        public static string SpecialActionEdit_LoadProfile {
            get {
                return ResourceManager.GetString("SpecialActionEdit.LoadProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macro Recorded.
        /// </summary>
        public static string SpecialActionEdit_MacroRecorded {
            get {
                return ResourceManager.GetString("SpecialActionEdit.MacroRecorded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-action Button.
        /// </summary>
        public static string SpecialActionEdit_MultiAction {
            get {
                return ResourceManager.GetString("SpecialActionEdit.MultiAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pressing unload trigger.
        /// </summary>
        public static string SpecialActionEdit_PressingUnloadTrigger {
            get {
                return ResourceManager.GetString("SpecialActionEdit.PressingUnloadTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press/Toggle key.
        /// </summary>
        public static string SpecialActionEdit_PressKey {
            get {
                return ResourceManager.GetString("SpecialActionEdit.PressKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record a macro.
        /// </summary>
        public static string SpecialActionEdit_RecordMacro {
            get {
                return ResourceManager.GetString("SpecialActionEdit.RecordMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to releasing unload trigger.
        /// </summary>
        public static string SpecialActionEdit_ReleasingUnloadTrigger {
            get {
                return ResourceManager.GetString("SpecialActionEdit.ReleasingUnloadTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repeat while held.
        /// </summary>
        public static string SpecialActionEdit_RepeatWhileHeld {
            get {
                return ResourceManager.GetString("SpecialActionEdit.RepeatWhileHeld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run on Trigger Release.
        /// </summary>
        public static string SpecialActionEdit_RunTriggerRelease {
            get {
                return ResourceManager.GetString("SpecialActionEdit.RunTriggerRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -Select an Action-.
        /// </summary>
        public static string SpecialActionEdit_SelectAction {
            get {
                return ResourceManager.GetString("SpecialActionEdit.SelectAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Key.
        /// </summary>
        public static string SpecialActionEdit_SelectKey {
            get {
                return ResourceManager.GetString("SpecialActionEdit.SelectKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a macro.
        /// </summary>
        public static string SpecialActionEdit_SelectMacro {
            get {
                return ResourceManager.GetString("SpecialActionEdit.SelectMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Unload Trigger.
        /// </summary>
        public static string SpecialActionEdit_SetUnloadTrigger {
            get {
                return ResourceManager.GetString("SpecialActionEdit.SetUnloadTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calibration of sixaxis wheel calibration.
        /// </summary>
        public static string SpecialActionEdit_SixAxisWheelCalib {
            get {
                return ResourceManager.GetString("SpecialActionEdit.SixAxisWheelCalib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronized Run.
        /// </summary>
        public static string SpecialActionEdit_SyncRun {
            get {
                return ResourceManager.GetString("SpecialActionEdit.SyncRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap Trigger.
        /// </summary>
        public static string SpecialActionEdit_TapTrigger {
            get {
                return ResourceManager.GetString("SpecialActionEdit.TapTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unload on trigger release.
        /// </summary>
        public static string SpecialActionEdit_UnloadTriggerRelease {
            get {
                return ResourceManager.GetString("SpecialActionEdit.UnloadTriggerRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Untoggle key by.
        /// </summary>
        public static string SpecialActionEdit_UntoggleKeyBy {
            get {
                return ResourceManager.GetString("SpecialActionEdit.UntoggleKeyBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to via lightbar.
        /// </summary>
        public static string SpecialActionEdit_ViaLightbar {
            get {
                return ResourceManager.GetString("SpecialActionEdit.ViaLightbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to via notification.
        /// </summary>
        public static string SpecialActionEdit_ViaNotification {
            get {
                return ResourceManager.GetString("SpecialActionEdit.ViaNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Square Stick.
        /// </summary>
        public static string SquareStick {
            get {
                return ResourceManager.GetString("SquareStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Minimized.
        /// </summary>
        public static string StartMinimized {
            get {
                return ResourceManager.GetString("StartMinimized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string StartText {
            get {
                return ResourceManager.GetString("StartText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        public static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fuzz specifies the minimum number of units the analog stick moves, in active zone, before the output is registered as changed in the mapper. This setting can be useful for worn sticks that cannot maintain a constant position. The value is expressed in raw stick units..
        /// </summary>
        public static string StickFuzzTooltip {
            get {
                return ResourceManager.GetString("StickFuzzTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OLD OBSOLETE SETTING. Attempt to apply a curve based on raw input coordinates before any dead zone info is applied. Wonky.
        /// </summary>
        public static string StickInputCurveTooltip {
            get {
                return ResourceManager.GetString("StickInputCurveTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always enforce max output setting. Useful for 100% Max Output and confining value to a circular output value.
        /// </summary>
        public static string StickMaxOutputForceTooltip {
            get {
                return ResourceManager.GetString("StickMaxOutputForceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In some situations, it might be useful to limit the maximum value that is output by the output analog stick. Max Output allows throttling the final output value of the analog stick..
        /// </summary>
        public static string StickMaxOutputTooltip {
            get {
                return ResourceManager.GetString("StickMaxOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Threshold for when an action will fire.
        /// </summary>
        public static string StickOuterBindDeadTooltip {
            get {
                return ResourceManager.GetString("StickOuterBindDeadTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Have outer bind fire before reaching a threshold. Action releases once the threshold has been exceeded.
        /// </summary>
        public static string StickOuterBindInvertTooltip {
            get {
                return ResourceManager.GetString("StickOuterBindInvertTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action to execute when stick travel reaches past a treshold. Useful for mapping keys for Walk or Sprint actions. Invert casues the action to fire up until the threshold.
        /// </summary>
        public static string StickOuterBindTooltip {
            get {
                return ResourceManager.GetString("StickOuterBindTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to + = Clockwise. - = Counter-clockwise.
        ///
        ///The rotation setting is meant to help correct the orientation of an analog stick if your thumb is slightly shifted when moving an analog stick. For example, your thumb might be slightly shifted from center when the analog stick is moved fully north. My thumbs shift slightly to the right when moving an analog stick fully north due to the way my hands grip the DS4. The value used denotes the number of degrees used to adjust the final axis output value. Values allows ra [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StickRotationTooltip {
            get {
                return ResourceManager.GetString("StickRotationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        public static string StopText {
            get {
                return ResourceManager.GetString("StopText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swipe Touchpad To Switch Profiles.
        /// </summary>
        public static string SwipeTouchpadToSwitchProfiles {
            get {
                return ResourceManager.GetString("SwipeTouchpadToSwitchProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task.
        /// </summary>
        public static string Task {
            get {
                return ResourceManager.GetString("Task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test.
        /// </summary>
        public static string Test {
            get {
                return ResourceManager.GetString("Test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Heavy.
        /// </summary>
        public static string TestHeavy {
            get {
                return ResourceManager.GetString("TestHeavy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Light.
        /// </summary>
        public static string TestLight {
            get {
                return ResourceManager.GetString("TestLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle.
        /// </summary>
        public static string Toggle {
            get {
                return ResourceManager.GetString("Toggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Touchpad.
        /// </summary>
        public static string Touchpad {
            get {
                return ResourceManager.GetString("Touchpad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Throttle low end of Touchpad movement. Reduces accidental mouse cursor movement when holding a mostly fixed position on the Touchpad.
        /// </summary>
        public static string TouchpadJitterCompTooltip {
            get {
                return ResourceManager.GetString("TouchpadJitterCompTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum calculated output travel before a Mouse event is sent to the system.
        /// </summary>
        public static string TouchpadMinThresholdTooltip {
            get {
                return ResourceManager.GetString("TouchpadMinThresholdTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjusts a touchpad swipe by a given rotation angle. Useful when a normal touchpad swipe is not a straight line across. Values allows range from -180 to 180. Default is 0..
        /// </summary>
        public static string TouchpadRotationTooltip {
            get {
                return ResourceManager.GetString("TouchpadRotationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensitivity used to engage a multi-touch Mouse Wheel Scroll action.
        /// </summary>
        public static string TouchpadSlideTooltip {
            get {
                return ResourceManager.GetString("TouchpadSlideTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate Mouse Left click with a Touchpad Tap. Max time interval is set at (value * 2) ms..
        /// </summary>
        public static string TouchpadTapTooltip {
            get {
                return ResourceManager.GetString("TouchpadTapTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds momentum to a Touchpad swipe once a finger is lifted. Adds extra Mouse cursor travel than would be possible with the confined space on the Touchpad.
        /// </summary>
        public static string TouchpadTrackballEnableTooltip {
            get {
                return ResourceManager.GetString("TouchpadTrackballEnableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add friction to virtual Trackball. Decreased friction will increase final mouse cursor travel time.
        /// </summary>
        public static string TouchpadTrackballFrictionTooltip {
            get {
                return ResourceManager.GetString("TouchpadTrackballFrictionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scroll.
        /// </summary>
        public static string TouchScroll {
            get {
                return ResourceManager.GetString("TouchScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slide.
        /// </summary>
        public static string TouchSlide {
            get {
                return ResourceManager.GetString("TouchSlide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap.
        /// </summary>
        public static string TouchTap {
            get {
                return ResourceManager.GetString("TouchTap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger.
        /// </summary>
        public static string Trigger {
            get {
                return ResourceManager.GetString("Trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger Effect.
        /// </summary>
        public static string TriggerEffect {
            get {
                return ResourceManager.GetString("TriggerEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn Off DS4Windows Temporarily.
        /// </summary>
        public static string TurnOffDS4WindowsTemporarily {
            get {
                return ResourceManager.GetString("TurnOffDS4WindowsTemporarily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two Stage Mode.
        /// </summary>
        public static string TwoStageMode {
            get {
                return ResourceManager.GetString("TwoStageMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UDP Server.
        /// </summary>
        public static string UDPServer {
            get {
                return ResourceManager.GetString("UDPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbound.
        /// </summary>
        public static string Unbound {
            get {
                return ResourceManager.GetString("Unbound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unload Trigger.
        /// </summary>
        public static string UnloadTrigger {
            get {
                return ResourceManager.GetString("UnloadTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unplug.
        /// </summary>
        public static string Unplug {
            get {
                return ResourceManager.GetString("Unplug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Window.
        /// </summary>
        public static string UpdaterWin_WinTitle {
            get {
                return ResourceManager.GetString("UpdaterWin.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please update .NET Runtime.
        /// </summary>
        public static string UpgradeNetCaption {
            get {
                return ResourceManager.GetString("UpgradeNetCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Controller.
        /// </summary>
        public static string UseController {
            get {
                return ResourceManager.GetString("UseController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use custom Steam Folder.
        /// </summary>
        public static string UseCustomSteamFolder {
            get {
                return ResourceManager.GetString("UseCustomSteamFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Smoothing.
        /// </summary>
        public static string UseSmoothing {
            get {
                return ResourceManager.GetString("UseSmoothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Utils.
        /// </summary>
        public static string Utils {
            get {
                return ResourceManager.GetString("Utils", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical Scale.
        /// </summary>
        public static string VerticalScale {
            get {
                return ResourceManager.GetString("VerticalScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only works with ViGEmBus 1.17.333.0 and newer.
        /// </summary>
        public static string ViGEm117MinNeeded {
            get {
                return ResourceManager.GetString("ViGEm117MinNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ViGEm Device Plugin Failed. Error Code {0}. Likely an internal ViGEmBus problem. Closing connection. If the issue persists, please close DS4Windows and then reboot Windows..
        /// </summary>
        public static string ViGEmPluginFailure {
            get {
                return ResourceManager.GetString("ViGEmPluginFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Controller Settings.
        /// </summary>
        public static string VirtualControllerSettings {
            get {
                return ResourceManager.GetString("VirtualControllerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waking Up From Suspend.
        /// </summary>
        public static string WakeupFromSuspend {
            get {
                return ResourceManager.GetString("WakeupFromSuspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warnings only.
        /// </summary>
        public static string WarningsOnly {
            get {
                return ResourceManager.GetString("WarningsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bluetooth Settings.
        /// </summary>
        public static string Welcome_BluetoothSettings {
            get {
                return ResourceManager.GetString("Welcome.BluetoothSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this window reappears after installing, you may need to reboot your PC..
        /// </summary>
        public static string Welcome_Step1HelpText {
            get {
                return ResourceManager.GetString("Welcome.Step1HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 1: Install ViGEmBus Driver.
        /// </summary>
        public static string Welcome_Step1Text {
            get {
                return ResourceManager.GetString("Welcome.Step1Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you&apos;ve used a 360 controller on this PC, you can skip this step..
        /// </summary>
        public static string Welcome_Step2HelpText {
            get {
                return ResourceManager.GetString("Welcome.Step2HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 2: If on Windows 7, Install 360 Driver.
        /// </summary>
        public static string Welcome_Step2Text {
            get {
                return ResourceManager.GetString("Welcome.Step2Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once flashing go to your Bluetooth Settings and connect to &quot;Wireless Controller&quot;. If asked, enter pair code 0000. Once paired, you&apos;re ready. Have fun!.
        /// </summary>
        public static string Welcome_Step3BluetoothHelpText {
            get {
                return ResourceManager.GetString("Welcome.Step3BluetoothHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 3: Connecting the DualShock 4 controller.
        ///To setup wired/USB:
        ///Simply plug a micro-USB into your PC and DualShock 4.
        ///
        ///To setup Bluetooth (optional): Hold the PS Button and Share for 3 seconds. The lightbar will begin to double flash..
        /// </summary>
        public static string Welcome_Step3HelpText {
            get {
                return ResourceManager.GetString("Welcome.Step3HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use HidHide to configure and hide any input controllers from other apps running on your system. Some games require only one controller to be present or double input will cause problems in game..
        /// </summary>
        public static string Welcome_Step4HelpText {
            get {
                return ResourceManager.GetString("Welcome.Step4HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Step 4: Install HidHide Driver.
        /// </summary>
        public static string Welcome_Step4Text {
            get {
                return ResourceManager.GetString("Welcome.Step4Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use FakerInput driver to expose system-wide virtual keyboard, relative mouse, and absolute mouse. Allows virtual KB+M events to be usable in some situations when SendInput fails. Such situations are elevated process and games, UAC prompts, and anti-cheat systems that block SendInput events. Use of FakerInput is necessary to allow DS4Windows to work with some games with anti-cheat protection like Valorant..
        /// </summary>
        public static string Welcome_Step5HelpText {
            get {
                return ResourceManager.GetString("Welcome.Step5HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Step 5: Install FakerInput Driver.
        /// </summary>
        public static string Welcome_Step5Text {
            get {
                return ResourceManager.GetString("Welcome.Step5Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to DS4Windows.
        /// </summary>
        public static string Welcome_WinTitle {
            get {
                return ResourceManager.GetString("Welcome.WinTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to White.
        /// </summary>
        public static string White {
            get {
                return ResourceManager.GetString("White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width.
        /// </summary>
        public static string Width {
            get {
                return ResourceManager.GetString("Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window Title.
        /// </summary>
        public static string WindowTitle {
            get {
                return ResourceManager.GetString("WindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X Center.
        /// </summary>
        public static string XCenter {
            get {
                return ResourceManager.GetString("XCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XInputChecker.
        /// </summary>
        public static string XInputChecker {
            get {
                return ResourceManager.GetString("XInputChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yaw.
        /// </summary>
        public static string Yaw {
            get {
                return ResourceManager.GetString("Yaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Y Center.
        /// </summary>
        public static string YCenter {
            get {
                return ResourceManager.GetString("YCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
